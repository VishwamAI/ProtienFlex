name: CI

on:
  push:
    branches: [main, feature/*]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.13'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            swig \
            cmake \
            dssp \
            build-essential \
            curl \
            git \
            python3-dev \
            gcc \
            gfortran \
            libblas-dev \
            liblapack-dev \
            libhdf5-dev \
            libnetcdf-dev

      - name: Set up Conda for specialized packages
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: '3.10'
          channels: conda-forge
          activate-environment: proteinflex-env
          auto-activate-base: false

      - name: Install dependencies
        shell: bash -l {0}
        run: |
          # Install core Python packages via pip
          python -m pip install --upgrade pip
          pip install Cython wheel setuptools

          # Install specialized packages via conda first
          conda install -y -c conda-forge numpy=1.23.5
          conda install -y -c conda-forge mdtraj=1.9.7 openmm=8.0.0 prody=2.4.1 parmed=3.4.3

          # Install remaining Python packages via pip
          pip install scipy==1.9.3
          pip install torch==2.0.1 --index-url https://download.pytorch.org/whl/cpu
          pip install transformers==4.32.0

          # Install test dependencies and package
          pip install pytest pytest-cov coverage
          pip install --prefer-binary --no-deps -r requirements-test.txt
          pip install -e .

      - name: Run tests
        shell: bash -l {0}
        env:
          PYTHONPATH: ${{ github.workspace }}
          OPENMM_CPU_THREADS: 1
          PROTEINFLEX_TEST_MODE: 1
          PYTHONWARNINGS: ignore::DeprecationWarning
          TRANSFORMERS_OFFLINE: 1
        run: |
          pytest tests/ -v --cov=proteinflex --cov-report=xml --import-mode=importlib

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true

      - name: Check code style
        run: |
          pip install flake8
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=80 --statistics

  build:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install build wheel

      - name: Build package
        run: |
          python -m build
          python setup.py bdist_wheel

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
